{
  "name": "yolol",
  "rules": {
    "program": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "statement"
      }
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "conditional"
        },
        {
          "type": "SYMBOL",
          "name": "goto"
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        }
      ]
    },
    "conditional": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": "then"
        },
        {
          "type": "SYMBOL",
          "name": "statement"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "SYMBOL",
                  "name": "statement"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "goto": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "goto"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "SYMBOL",
              "name": "field"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "assignment_operator"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "assignment_operator": {
      "type": "PATTERN",
      "value": "[+\\-*\\/%\\^]?="
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "unary_operation"
            },
            {
              "type": "SYMBOL",
              "name": "binary_operation"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            },
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "SYMBOL",
              "name": "field"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "unary_operation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "pre_unary_operation"
        },
        {
          "type": "SYMBOL",
          "name": "post_unary_operation"
        }
      ]
    },
    "pre_unary_operation": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "pre_unary_operator"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "pre_unary_operator": {
      "type": "PATTERN",
      "value": "[-!]|\\+\\+|--|[Aa][Bb][Ss]|[Nn][Oo][Tt]|[Ss][Qq][Rr][Tt]|[Ss][Ii][Nn]|[Cc][Oo][Ss]|[Tt][Aa][Nn]|[Aa][Ss][Ii][Nn]|[Aa][Cc][Oo][Ss]|[Aa][Tt][Aa][Nn]"
    },
    "post_unary_operation": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "SYMBOL",
            "name": "post_unary_operator"
          }
        ]
      }
    },
    "post_unary_operator": {
      "type": "PATTERN",
      "value": "\\+\\+|--|!"
    },
    "binary_operation": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "SYMBOL",
            "name": "binary_operator"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "binary_operator": {
      "type": "PATTERN",
      "value": "[+\\-*\\/%^<>]|[<>=!]=|[Aa][Nn][Dd]|[Oo][Rr]"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z]+"
    },
    "variable": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "field": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "string": {
      "type": "PATTERN",
      "value": "\".+\""
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(?:\\.\\d{0,3})?"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

